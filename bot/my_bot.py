import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from bot.config import my_token
from aiogram import F
from aiogram.filters import Command
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

from random import randint

logging.basicConfig(level=logging.INFO)
bot = Bot(token=my_token, parse_mode="HTML")
dp = Dispatcher()


@dp.message(Command("start"))
async def cmd_start(message):
    builder = ReplyKeyboardBuilder()
    builder.row(
        types.KeyboardButton(text="–ú–∞–Ω–≥–∞–ª—ã"),
        types.KeyboardButton(text="–ú–∞–Ω–≥–∞–ª—ã —Å –Ω–∞–≤–µ—Å–æ–º"),
        types.KeyboardButton(text="–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã")
    )
    builder.row(
        types.KeyboardButton(text="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
    )
    builder.row(
        types.KeyboardButton(text="–•–æ—á—É –ø–æ–ª—É—á–∏—Ç—å —Å–∫–∏–¥–∫—É"),
        types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç", request_contact=True)

    )

    await message.answer("–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç Grills.by :) –í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω–æ–µ",
                         reply_markup=builder.as_markup(resize_keyboard=True))

    @dp.message(F.text.lower() == "–º–∞–Ω–≥–∞–ª—ã")
    async def model(message):
        await message.reply("–ë–∞—Ä–±–µ–∫—é 800 - 650 —Ä—É–±.\n"
                            "–ë–∞—Ä–±–µ–∫—é 1000 - 710 —Ä—É–±.\n"
                            "–ë–∞—Ä–±–µ–∫—é –õ–æ—Ñ—Ç 800 - 870 —Ä—É–±.\n"
                            "–ë–∞—Ä–±–µ–∫—é –õ–æ—Ñ—Ç 1000 - 930 —Ä—É–±.\n"
                            "–ë–∞—Ä–±–µ–∫—é 800 —Å –ø–µ—á—å—é - 1600 —Ä—É–±.\n")

    @dp.message(F.text.lower() == "–º–∞–Ω–≥–∞–ª—ã —Å –Ω–∞–≤–µ—Å–æ–º")
    async def model(message):
        await message.reply("–ë–∞—Ä–±–µ–∫—é 1000 —Å –Ω–∞–≤–µ—Å–æ–º - 1320 —Ä—É–±.\n"
                            "–ë–∞—Ä–±–µ–∫—é 800 —Å –Ω–∞–≤–µ—Å–æ–º - 1260 —Ä—É–±.\n"
                            "–ë–∞—Ä–±–µ–∫—é –õ–æ—Ñ—Ç 1000 —Å –Ω–∞–≤–µ—Å–æ–º - 1320 —Ä—É–±.\n"
                            "–ë–∞—Ä–±–µ–∫—é –õ–æ—Ñ—Ç 800 —Å –Ω–∞–≤–µ—Å–æ–º - 1260 —Ä—É–±.\n"
                            "–ë–∞—Ä–±–µ–∫—é 800 —Å –Ω–∞–≤–µ—Å–æ–º –∏ –ø–µ—á—å—é - 2100 —Ä—É–±.\n"
                            "–ë–∞—Ä–±–µ–∫—é –õ–æ—Ñ—Ç 800 —Å –Ω–∞–≤–µ—Å–æ–º –∏ –ø–µ—á—å—é - 2200 —Ä—É–±.\n"
                            "–ú–æ–¥—É–ª—å–Ω—ã–π –õ–æ—Ñ—Ç –Ω–∞–≤–µ—Å - 660 —Ä—É–±.\n"
                            "–ú–æ–¥—É–ª—å–Ω—ã–π –Ω–∞–≤–µ—Å - 540 —Ä—É–±.\n")

    @dp.message(F.text.lower() == "—Ö–æ—á—É –ø–æ–ª—É—á–∏—Ç—å —Å–∫–∏–¥–∫—É")
    async def without_puree(message):
        await message.reply("–û—Ç–ø—Ä–∞–≤—å —Å–æ–æ–±—â–µ–Ω–∏–µ: /random,–∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!")

    @dp.message(F.text.lower() == "–∞–∫—Å–µ—Å—Å—É–∞—Ä—ã")
    async def accessories(message):
        await message.reply("–†–µ—à–µ—Ç–∫–∞-–≥—Ä–∏–ª—å (–Ω–µ—Ä–∂.) —Å —Ä—É—á–∫–æ–π - 80 —Ä—É–±.\n"
                            "–ü–æ–¥—Å—Ç–∞–≤–∫–∞ –ø–æ–¥ –∫–∞–∑–∞–Ω/—Å–∞–¥–∂ - 60 —Ä—É–±.\n"
                            "–î—É–±–æ–≤–∞—è –¥–æ—Å–∫–∞ –Ω–∞ –±–æ–∫–æ–≤—É—é –ø–æ–ª–∫—É - 40 —Ä—É–±.\n"
                            "–ö–æ—á–µ—Ä–≥–∞+—Å–æ–≤–æ–∫ - 37 —Ä—É–±.\n"
                            "–†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –∂–∞—Ä–æ–≤–Ω–∏ - 20 —Ä—É–±.\n"
                            "–®–∞–º–ø—É—Ä—ã- 8 —Ä—É–±.\n"
                            "–ê–Ω—Ç–∏–ø—Ä–∏–≥–∞—Ä–Ω—ã–π —Ç–µ—Ñ–ª–æ–Ω–æ–≤—ã–π –∫–æ–≤—Ä–∏–∫ - 15 —Ä—É–±.\n"
                            "–®—É–º–æ–≤–∫–∞+–ø–æ–ª–æ–≤–Ω–∏–∫ - 40 —Ä—É–±.\n")

    @dp.message(F.text.lower() == "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
    async def model_info(message):
        await message.reply("/info1 - –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ú–∞–Ω–≥–∞–ª–∞—Ö\n"
                            "/info2 - –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ú–∞–Ω–≥–∞–ª–∞—Ö —Å –Ω–∞–≤–µ—Å–æ–º\n"
                            "/info3 - –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ú–∞–Ω–≥–∞–ª–∞—Ö —Å–Ω–∞–≤–µ—Å–æ–º –∏ –ø–µ—á—å—é\n"
                            "/info4 - –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ù–∞–≤–µ—Å–∞—Ö\n")




# async def contact_keyboard():
#     markup = ReplyKeyboardMarkup(resize_keyboard=True)
#     first_button = KeyboardButton(text=("üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å"), request_contact=True)
#     markup.add(first_button)
#     return markup
#
#
# # handlers.py
# @dp.message_handler(Command("contact"))
# async def share_number(message: types.Message):
#     await message.answer("–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç", reply_markup=await contact_keyboard())
#
# @dp.message_handler(content_types=types.ContentType.CONTACT)
# async def get_contact(message: types.Message):
#     contact = message.contact
#     await message.answer(f"–°–ø–∞—Å–∏–±–æ, {contact.full_name}.\n"
#                          f"–í–∞—à –Ω–æ–º–µ—Ä {contact.phone_number} –±—ã–ª –ø–æ–ª—É—á–µ–Ω")






@dp.message(Command("random"))
async def cmd_random(message: types.Message):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞–∂–º–∏ –º–µ–Ω—è",
        callback_data="random_value")
    )
    await message.answer(
        "–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏–ª —á–∏—Å–ª–æ",
        reply_markup=builder.as_markup()
    )

@dp.callback_query(F.data == "random_value")
async def send_random_value(callback: types.CallbackQuery):
    await callback.message.answer(str(randint(1, 1001)))
    await callback.answer(
        text="–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å –±–æ—Ç–æ–º!",
        show_alert=True
    )

@dp.message(Command("info1"))
async def cmd_info(message: types.Message):
    kb = [
        [
            types.KeyboardButton(text="–ë800"),
            types.KeyboardButton(text="–ë1000"),
            types.KeyboardButton(text="–ë –õ–æ—Ñ—Ç 800"),
            types.KeyboardButton(text="–ë –õ–æ—Ñ—Ç 1000"),
            types.KeyboardButton(text="–ë800 —Å –ø–µ—á—å—é")
        ],
    ]

    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ"
    )
    await message.answer('–ë–∞—Ä–±–µ–∫—é –±—ã–ª–æ —Å–æ–∫—Ä–∞—â–µ–Ω–æ –∫–∞–∫ "–ë"', reply_markup=keyboard)

@dp.message(F.text.lower() == "–±800")
async def specification(message: types.Message):
    await message.reply("–û–±—â–∞—è –¥–ª–∏–Ω–∞: 140 —Å–º \n"
                        "–í—ã—Å–æ—Ç–∞: 100 —Å–º \n"
                        "–í–µ—Å: 51 –∫–≥ \n"
                        "–î–ª–∏–Ω–∞ –∂–∞—Ä–æ–≤–Ω–∏: 80 —Å–º \n"
                        "–¢–æ–ª—â–∏–Ω–∞ —Å—Ç–∞–ª–∏: 5 –º–º\n")

@dp.message(F.text.lower() == "–±1000")
async def specification(message: types.Message):
    await message.reply("–û–±—â–∞—è –¥–ª–∏–Ω–∞: 160 —Å–º \n"
                        "–í—ã—Å–æ—Ç–∞: 100 —Å–º \n"
                        "–í–µ—Å: 61 –∫–≥ \n"
                        "–î–ª–∏–Ω–∞ –∂–∞—Ä–æ–≤–Ω–∏: 100 —Å–º \n"
                        "–¢–æ–ª—â–∏–Ω–∞ —Å—Ç–∞–ª–∏: 5 –º–º\n")

@dp.message(F.text.lower() == "–± –ª–æ—Ñ—Ç 800")
async def specification(message: types.Message):
    await message.reply("–û–±—â–∞—è –¥–ª–∏–Ω–∞: 160 —Å–º \n"
                        "–í—ã—Å–æ—Ç–∞: 100 —Å–º \n"
                        "–í–µ—Å: 65 –∫–≥ \n"
                        "–î–ª–∏–Ω–∞ –∂–∞—Ä–æ–≤–Ω–∏: 80 —Å–º \n"
                        "–¢–æ–ª—â–∏–Ω–∞ —Å—Ç–∞–ª–∏: 5 –º–º\n")

@dp.message(F.text.lower() == "–± –ª–æ—Ñ—Ç 1000")
async def specification(message: types.Message):
    await message.reply("–û–±—â–∞—è –¥–ª–∏–Ω–∞: 180 —Å–º \n"
                        "–í—ã—Å–æ—Ç–∞: 100 —Å–º \n"
                        "–í–µ—Å: 75 –∫–≥ \n"
                        "–î–ª–∏–Ω–∞ –∂–∞—Ä–æ–≤–Ω–∏: 100 —Å–º \n"
                        "–¢–æ–ª—â–∏–Ω–∞ —Å—Ç–∞–ª–∏: 5 –º–º\n")

@dp.message(F.text.lower() == "–±800 —Å –ø–µ—á—å—é")
async def specification(message: types.Message):
    await message.reply("–û–±—â–∞—è –¥–ª–∏–Ω–∞: 175 —Å–º \n"
                        "–í—ã—Å–æ—Ç–∞: 100 —Å–º \n"
                        "–í–µ—Å: 150 –∫–≥ \n"
                        "–î–ª–∏–Ω–∞ –∂–∞—Ä–æ–≤–Ω–∏: 80 —Å–º \n"
                        "–¢–æ–ª—â–∏–Ω–∞ —Å—Ç–∞–ª–∏: 5 –º–º\n")



@dp.message(Command("info2"))
async def cmd_info(message: types.Message):
    kb = [
        [
            types.KeyboardButton(text="–ë1000 —Å –Ω–∞–≤–µ—Å–æ–º"),
            types.KeyboardButton(text="–ë800 —Å –Ω–∞–≤–µ—Å–æ–º"),
            types.KeyboardButton(text="–ë –õ–æ—Ñ—Ç 1000 —Å –Ω–∞–≤–µ—Å–æ–º"),
            types.KeyboardButton(text="–ë –õ–æ—Ñ—Ç 800 —Å –Ω–∞–≤–µ—Å–æ–º"),
        ],
    ]

    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ"
    )
    await message.answer('–ë–∞—Ä–±–µ–∫—é –±—ã–ª–æ —Å–æ–∫—Ä–∞—â–µ–Ω–æ –∫–∞–∫ "–ë"', reply_markup=keyboard)

@dp.message(F.text.lower() == "–±1000 —Å –Ω–∞–≤–µ—Å–æ–º")
async def specification(message: types.Message):
    await message.reply("–û–±—â–∞—è –¥–ª–∏–Ω–∞: 192 —Å–º \n"
                        "–í—ã—Å–æ—Ç–∞: 220 —Å–º \n"
                        "–í–µ—Å: 130 –∫–≥ \n"
                        "–î–ª–∏–Ω–∞ –∂–∞—Ä–æ–≤–Ω–∏: 100 —Å–º \n"
                        "–¢–æ–ª—â–∏–Ω–∞ —Å—Ç–∞–ª–∏: 5 –º–º\n")

@dp.message(F.text.lower() == "–±800 —Å –Ω–∞–≤–µ—Å–æ–º")
async def specification(message: types.Message):
    await message.reply("–û–±—â–∞—è –¥–ª–∏–Ω–∞: 172 —Å–º \n"
                        "–í—ã—Å–æ—Ç–∞: 220 —Å–º \n"
                        "–í–µ—Å: 120 –∫–≥ \n"
                        "–î–ª–∏–Ω–∞ –∂–∞—Ä–æ–≤–Ω–∏: 80 —Å–º \n"
                        "–¢–æ–ª—â–∏–Ω–∞ —Å—Ç–∞–ª–∏: 5 –º–º\n")

@dp.message(F.text.lower() == "–± –ª–æ—Ñ—Ç 1000 —Å –Ω–∞–≤–µ—Å–æ–º")
async def specification(message: types.Message):
    await message.reply("–û–±—â–∞—è –¥–ª–∏–Ω–∞: 179 —Å–º \n"
                        "–í—ã—Å–æ—Ç–∞: 220 —Å–º \n"
                        "–í–µ—Å: 130 –∫–≥ \n"
                        "–î–ª–∏–Ω–∞ –∂–∞—Ä–æ–≤–Ω–∏: 100 —Å–º \n"
                        "–¢–æ–ª—â–∏–Ω–∞ —Å—Ç–∞–ª–∏: 5 –º–º\n")

@dp.message(F.text.lower() == "–± –ª–æ—Ñ—Ç 800 —Å –Ω–∞–≤–µ—Å–æ–º")
async def specification(message: types.Message):
    await message.reply("–û–±—â–∞—è –¥–ª–∏–Ω–∞: 159 —Å–º \n"
                        "–í—ã—Å–æ—Ç–∞: 220 —Å–º \n"
                        "–í–µ—Å: 115 –∫–≥ \n"
                        "–î–ª–∏–Ω–∞ –∂–∞—Ä–æ–≤–Ω–∏: 80 —Å–º \n"
                        "–¢–æ–ª—â–∏–Ω–∞ —Å—Ç–∞–ª–∏: 5 –º–º\n")



@dp.message(Command("info3"))
async def cmd_info(message: types.Message):
    kb = [
        [
            types.KeyboardButton(text="–ë800 —Å –Ω–∞–≤–µ—Å–æ–º –∏ –ø–µ—á—å—é"),
            types.KeyboardButton(text="–ë –õ–æ—Ñ—Ç 800 —Å –Ω–∞–≤–µ—Å–æ–º –∏ –ø–µ—á—å—é"),
        ],
    ]

    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ"
    )
    await message.answer('–ë–∞—Ä–±–µ–∫—é –±—ã–ª–æ —Å–æ–∫—Ä–∞—â–µ–Ω–æ –∫–∞–∫ "–ë"', reply_markup=keyboard)


@dp.message(F.text.lower() == "–±800 —Å –Ω–∞–≤–µ—Å–æ–º –∏ –ø–µ—á—å—é")
async def specification(message: types.Message):
    await message.reply("–û–±—â–∞—è –¥–ª–∏–Ω–∞: 183 —Å–º \n"
                        "–í—ã—Å–æ—Ç–∞: 220 —Å–º \n"
                        "–í–µ—Å: 195 –∫–≥ \n"
                        "–î–ª–∏–Ω–∞ –∂–∞—Ä–æ–≤–Ω–∏: 80 —Å–º \n"
                        "–¢–æ–ª—â–∏–Ω–∞ —Å—Ç–∞–ª–∏: 5 –º–º\n")


@dp.message(F.text.lower() == "–± –ª–æ—Ñ—Ç 800 —Å –Ω–∞–≤–µ—Å–æ–º –∏ –ø–µ—á—å—é")
async def specification(message: types.Message):
    await message.reply("–û–±—â–∞—è –¥–ª–∏–Ω–∞: 185 —Å–º \n"
                        "–í—ã—Å–æ—Ç–∞: 220 —Å–º \n"
                        "–í–µ—Å: 220 –∫–≥ \n"
                        "–î–ª–∏–Ω–∞ –∂–∞—Ä–æ–≤–Ω–∏: 80 —Å–º \n"
                        "–¢–æ–ª—â–∏–Ω–∞ —Å—Ç–∞–ª–∏: 5 –º–º\n")



@dp.message(Command("info4"))
async def cmd_info(message: types.Message):
    kb = [
        [
            types.KeyboardButton(text="–ú–æ–¥—É–ª—å–Ω—ã–π –õ–æ—Ñ—Ç –Ω–∞–≤–µ—Å"),
            types.KeyboardButton(text="–ú–æ–¥—É–ª—å–Ω—ã–π –Ω–∞–≤–µ—Å"),
        ],
    ]

    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ"
    )
    await message.answer('–ù–∞–≤–µ—Å - –æ—Ç–ª–∏—á–Ω–æ–µ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫ –≤–∞—à–µ–º—É –º–∞–Ω–≥–∞–ª—É!', reply_markup=keyboard)


@dp.message(F.text.lower() == "–º–æ–¥—É–ª—å–Ω—ã–π –ª–æ—Ñ—Ç –Ω–∞–≤–µ—Å")
async def specification(message: types.Message):
    await message.reply("–û–±—â–∞—è –¥–ª–∏–Ω–∞: 198 —Å–º \n"
                        "–í—ã—Å–æ—Ç–∞: 220 —Å–º \n"
                        "–í–µ—Å: 87 –∫–≥ \n")


@dp.message(F.text.lower() == "–º–æ–¥—É–ª—å–Ω—ã–π –Ω–∞–≤–µ—Å")
async def specification(message: types.Message):
    await message.reply("–û–±—â–∞—è –¥–ª–∏–Ω–∞: 178 —Å–º \n"
                        "–í—ã—Å–æ—Ç–∞: 220 —Å–º \n"
                        "–í–µ—Å: 60 –∫–≥ \n")


async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())